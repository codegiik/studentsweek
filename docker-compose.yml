version: "3.8"

services:
  frontend:
    image: "<image-name>"
    build:
      context: ./
      args:
        - PUBLIC_FIREBASE_API_KEY=$PUBLIC_FIREBASE_API_KEY
        - PUBLIC_MAINTENANCE=$PUBLIC_MAINTENANCE
        - PUBLIC_FIREBASE_AUTH_DOMAIN=$PUBLIC_FIREBASE_AUTH_DOMAIN
        - PUBLIC_FIREBASE_PROJECT_ID=$PUBLIC_FIREBASE_PROJECT_ID
        - PUBLIC_FIREBASE_STORAGE_BUCKET=$PUBLIC_FIREBASE_STORAGE_BUCKET
        - PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$PUBLIC_FIREBASE_MESSAGING_SENDER_ID
        - PUBLIC_FIREBASE_APP_ID=$PUBLIC_FIREBASE_APP_ID
        - PUBLIC_FIREBASE_MEASUREMENT_ID=$PUBLIC_FIREBASE_MEASUREMENT_ID
        - SECRET_FIREBASE_SERVICE_KEY=$SECRET_FIREBASE_SERVICE_KEY
    env_file: .env
    restart: unless-stopped
    networks:
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.studentsweek.entrypoints: "websecure"
      traefik.http.routers.studentsweek.rule: "Host(`sds.cwke.pw`)"
      traefik.http.routers.studentsweek.tls: "true"
      traefik.http.routers.studentsweek.tls.certresolver: "production"
      traefik.http.routers.studentsweek.service: "studentsweek"
      traefik.http.services.studentsweek.loadbalancer.server.port: "3000"
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  traefik:
    image: "traefik:v2.9"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.dashboard.rule: "Host(`<traefik-host>`)"
        traefik.http.routers.dashboard.entrypoints: "websecure"
        traefik.http.routers.dashboard.tls: "true"
        traefik.http.routers.dashboard.tls.certresolver: "production"
        traefik.http.routers.dashboard.service: "api@internal"
        traefik.http.routers.dashboard.middlewares: "auth"
        traefik.http.middlewares.auth.basicauth.users: "${BASIC_AUTH}"
        traefik.http.services.dashboard.loadbalancer.server.port: "8080"
        traefik.http.middlewares.remove-www.redirectregex.regex: "^(https?://)www.(.*)$$"
        traefik.http.middlewares.remove-www.redirectregex.replacement: "$${1}$${2}"
        traefik.http.middlewares.remove-www.redirectregex.permanent: "true"

networks:
  traefik:
